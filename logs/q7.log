-- q7 - two create view commands
-- 1.
-- Description: shows all dishes from restaurants currently open, sorted by restaurant
-- If opening_hour is after closing hour (e.g. restaurant is open from 11am to 1am), then
-- it is assumed that closing_hour refers to the next day.

-- create view statement
CREATE VIEW availableDishes AS
SELECT r.name as restaurant, d.name, description, price, type
FROM (SELECT * from restaurants WHERE opening_hour < closing_hour) AS r, dishes d
WHERE r.license_id=d.license_id
AND CURRENT_TIME BETWEEN opening_hour AND closing_hour
UNION
SELECT r.name as restaurant, d.name, description, price, type
FROM (SELECT * from restaurants WHERE opening_hour > closing_hour) AS r, dishes d
WHERE r.license_id=d.license_id
AND CURRENT_TIME NOT BETWEEN closing_hour AND opening_hour
ORDER BY restaurant;
-- system response
CREATE VIEW

-- query involving the view
SELECT * FROM availableDishes LIMIT 5;
-- system response
 restaurant |           name           | description | price | type
------------+--------------------------+-------------+-------+------
 Amir       | Blizzard                 |             |    12 | E
 Amir       | Knack                    |             |    30 | E
 Amir       | Roast beef with Alsatian |             |    20 | D
 Amir       | Curly Fries              |             |  16.8 | E
 Amir       | Kouglof                  |             |    22 | A
(5 rows)

-- attempt to update view
UPDATE availableDishes SET price=price*2;
-- system response
ERROR:  cannot update view "availabledishes"
DETAIL:  Views containing UNION, INTERSECT, or EXCEPT are not automatically updatable.
HINT:  To enable updating the view, provide an INSTEAD OF UPDATE trigger or an unconditional ON UPDATE DO INSTEAD rule.

-- this view is not updatable because it uses set operations (union)

-- 2.
-- Description: lists all customers sorted by their total spending on all orders
-- For customers who have made orders, their total spending will be calculated by
-- summing the cost of every order they have made.
-- For customers who have not made any orders, their total spending will be 0.

-- create view statement
CREATE VIEW spendingPerPerson AS
SELECT cell_phone_number, sum(quantity*price) FROM orders o, contains c, dishes d
WHERE o.oid=c.oid AND c.license_id=d.license_id AND c.name=d.name
GROUP BY cell_phone_number
UNION
SELECT c.cell_phone_number, 0 FROM customers c WHERE c.cell_phone_number NOT IN
(SELECT o.cell_phone_number FROM orders o)
ORDER BY sum DESC;
-- system response
CREATE VIEW

-- query involving the view
SELECT * FROM spendingPerPerson LIMIT 5;
-- system response
 cell_phone_number | sum
-------------------+-----
 5147963102        | 629
 5146933153        | 545
 5143393136        | 417
 5149234493        | 369
 5146371409        | 337
(5 rows)

-- attempt to update view
UPDATE spendingPerPerson SET sum=100 WHERE cell_phone_number='5143809594';
-- system response
ERROR:  cannot update view "spendingperperson"
DETAIL:  Views containing UNION, INTERSECT, or EXCEPT are not automatically updatable.
HINT:  To enable updating the view, provide an INSTEAD OF UPDATE trigger or an unconditional ON UPDATE DO INSTEAD rule.

-- this view is not updatable because it uses aggregate functions (sum), GROUP BY, and set operations (union)
